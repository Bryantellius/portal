{"version":3,"file":"lecture.js","sourceRoot":"","sources":["../../../db/models/lecture.ts"],"names":[],"mappings":";;AAAA,yCAAkC;AAClC,kBAAe,CAAC,SAAc,EAAE,SAAc,EAAE,EAAE;IAChD,MAAM,OAAQ,SAAQ,iBAAK;QAGzB;;;;WAIG;QACH,MAAM,CAAC,SAAS,CAAC,MAAW;YAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,CAAC,CAAC;YAClE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;QAC1E,CAAC;KACF;IAAA,CAAC;IACF,OAAO,CAAC,IAAI,CAAC;QACX,QAAQ,EAAE,SAAS,CAAC,OAAO;QAC3B,KAAK,EAAE,SAAS,CAAC,MAAM;QACvB,QAAQ,EAAE,SAAS,CAAC,MAAM;KAC3B,EAAE;QACD,SAAS;QACT,SAAS,EAAE,SAAS;KACrB,CAAC,CAAC;IACH,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import { Model } from \"sequelize\";\nexport default (sequelize: any, DataTypes: any) => {\n  class Lecture extends Model {\n    static quiz: any;\n    static module: any;\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models: any) {\n      this.quiz = this.hasOne(models.Quiz, { foreignKey: 'lectureId' });\n      this.module = this.belongsTo(models.Module, { foreignKey: 'moduleId' });\n    }\n  };\n  Lecture.init({\n    moduleId: DataTypes.INTEGER,\n    title: DataTypes.STRING,\n    fileName: DataTypes.STRING\n  }, {\n    sequelize,\n    modelName: 'Lecture',\n  });\n  return Lecture;\n};"]}