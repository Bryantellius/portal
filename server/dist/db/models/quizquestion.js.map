{"version":3,"file":"quizquestion.js","sourceRoot":"","sources":["../../../db/models/quizquestion.ts"],"names":[],"mappings":";;AAAA,yCAAkC;AAElC,kBAAe,CAAC,SAAc,EAAE,SAAc,EAAE,EAAE;IAChD,MAAM,YAAa,SAAQ,iBAAK;QAG9B;;;;WAIG;QACH,MAAM,CAAC,SAAS,CAAC,MAAW;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,UAAU,EAAE,gBAAgB,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;QAC1G,CAAC;KACF;IAAA,CAAC;IAEF,YAAY,CAAC,IAAI,CAAC;QAChB,MAAM,EAAE,SAAS,CAAC,OAAO;QACzB,IAAI,EAAE,SAAS,CAAC,MAAM;QACtB,IAAI,EAAE,SAAS,CAAC,OAAO;QACvB,SAAS,EAAE,SAAS,CAAC,OAAO;KAC7B,EAAE;QACD,SAAS;QACT,SAAS,EAAE,cAAc;KAC1B,CAAC,CAAC;IACH,OAAO,YAAY,CAAC;AACtB,CAAC,CAAC","sourcesContent":["import { Model } from \"sequelize\";\n\nexport default (sequelize: any, DataTypes: any) => {\n  class QuizQuestion extends Model {\n    static quiz: any;\n    static options: any;\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models: any) {\n      this.options = this.hasMany(models.QuizQuestionOption, { foreignKey: 'quizQuestionId', as: 'options' });\n    }\n  };\n\n  QuizQuestion.init({\n    quizId: DataTypes.INTEGER,\n    text: DataTypes.STRING,\n    type: DataTypes.INTEGER,\n    sortOrder: DataTypes.INTEGER\n  }, {\n    sequelize,\n    modelName: 'QuizQuestion',\n  });\n  return QuizQuestion;\n};"]}