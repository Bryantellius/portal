{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../db/models/index.ts"],"names":[],"mappings":";;;;;AAAA,4CAAoB;AACpB,gDAAwB;AACxB,yCAAsC;AACtC,qEAA2C;AAC3C,gEAA8C;AAC9C,4DAA2C;AAC3C,sDAAqC;AACrC,8DAA6C;AAC7C,wDAAuC;AACvC,sDAAqC;AACrC,kDAAiC;AACjC,kEAAiD;AACjD,8EAA6D;AAC7D,kFAAiE;AACjE,kDAAiC;AACjC,kDAAiC;AAGjC,MAAM,QAAQ,GAAG,cAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC3C,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAC;AAElD,aAAa;AACb,MAAM,SAAS,GAAE,kBAAM,CAAC,GAAG,CAAC,CAAC;AAE7B,MAAM,SAAS,GAAG,SAAS,CAAC,gBAAgB;IACxC,CAAC,CAAC,IAAI,qBAAS,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,SAAS,CAAC;IACnE,CAAC,CAAC,IAAI,qBAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AAE3F,MAAM,UAAU,GAAG,YAAE;KAClB,WAAW,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;KACtC,MAAM,CAAC,IAAI,CAAC,EAAE;IACb,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;AACpH,CAAC,CAAC,CAAC;AAEL,MAAM,EAAE,GAAQ;IACd,SAAS;IACT,SAAS,EAAT,qBAAS;IACT,WAAW,EAAE,qBAAkB,CAAC,SAAS,EAAE,qBAAS,CAAC;IACrD,SAAS,EAAE,mBAAgB,CAAC,SAAS,EAAE,qBAAS,CAAC;IACjD,MAAM,EAAE,gBAAa,CAAC,SAAS,EAAE,qBAAS,CAAC;IAC3C,UAAU,EAAE,oBAAiB,CAAC,SAAS,EAAE,qBAAS,CAAC;IACnD,OAAO,EAAE,iBAAc,CAAC,SAAS,EAAE,qBAAS,CAAC;IAC7C,MAAM,EAAE,gBAAa,CAAC,SAAS,EAAE,qBAAS,CAAC;IAC3C,IAAI,EAAE,cAAW,CAAC,SAAS,EAAE,qBAAS,CAAC;IACvC,YAAY,EAAE,sBAAmB,CAAC,SAAS,EAAE,qBAAS,CAAC;IACvD,kBAAkB,EAAE,4BAAyB,CAAC,SAAS,EAAE,qBAAS,CAAC;IACnE,oBAAoB,EAAE,8BAA2B,CAAC,SAAS,EAAE,qBAAS,CAAC;IACvE,IAAI,EAAE,cAAW,CAAC,SAAS,EAAE,qBAAS,CAAC;IACvC,IAAI,EAAE,cAAW,CAAC,SAAS,EAAE,qBAAS,CAAC;CACxC,CAAC;AAEF,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;IAClC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE;QAC3B,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KAC7B;AACH,CAAC,CAAC,CAAC;AAEH,kBAAe,EAAE,CAAC","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport { Sequelize } from \"sequelize\";\nimport config from \"../../config/database\";\nimport AccessTokenFactory from \"./accesstoken\"\nimport ClassListFactory from \"./classlist\";\nimport CourseFactory from \"./course\";\nimport CurriculumFactory from \"./curriculum\";\nimport LectureFactory from \"./lecture\";\nimport ModuleFactory from \"./module\";\nimport QuizFactory from \"./quiz\";\nimport QuizQuestionFactory from \"./quizquestion\";\nimport QuizQuestionOptionFactory from \"./quizquestionoption\";\nimport QuizQuestionResponseFactory from \"./quizquestionresponse\";\nimport RoleFactory from \"./role\";\nimport UserFactory from \"./user\";\n\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\n\n// @ts-ignore\nconst envConfig= config[env];\n\nconst sequelize = envConfig.use_env_variable\n    ? new Sequelize(process.env[envConfig.use_env_variable], envConfig)\n    : new Sequelize(envConfig.database, envConfig.username, envConfig.password, envConfig);\n\nconst modelFiles = fs\n  .readdirSync(path.resolve(\"db/models\"))\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js' || file.slice(-3) === '.ts');\n  });\n\nconst db: any = {\n  sequelize,\n  Sequelize,\n  AccessToken: AccessTokenFactory(sequelize, Sequelize),\n  ClassList: ClassListFactory(sequelize, Sequelize),\n  Course: CourseFactory(sequelize, Sequelize),\n  Curriculum: CurriculumFactory(sequelize, Sequelize),\n  Lecture: LectureFactory(sequelize, Sequelize),\n  Module: ModuleFactory(sequelize, Sequelize),\n  Quiz: QuizFactory(sequelize, Sequelize),\n  QuizQuestion: QuizQuestionFactory(sequelize, Sequelize),\n  QuizQuestionOption: QuizQuestionOptionFactory(sequelize, Sequelize),\n  QuizQuestionResponse: QuizQuestionResponseFactory(sequelize, Sequelize),\n  Role: RoleFactory(sequelize, Sequelize),\n  User: UserFactory(sequelize, Sequelize)\n};\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  } \n});\n\nexport default db;\n"]}