{"version":3,"file":"quiz.router.js","sourceRoot":"","sources":["../../../routes/api/quiz.router.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,qCAA2E;AAE3E,wFAA+D;AAE/D,MAAM,UAAU,GAAG,gBAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAEjD,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAAC,OAAA,GAAG,CAAC,MAAM,CAAC,SAAS;QAC/F,CAAC,CAAC,MAAM,yBAAc,CAAC,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;QACtD,CAAC,CAAC,MAAM,yBAAc,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;EAAA,CAAC,CAAC;AAEpD,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,yBAAc,CAAC,QAAQ,CAAC,CAAC;AAEhD,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,yBAAc,CAAC,eAAe,CAAC,CAAC;AAExD,kBAAe,UAAU,CAAC","sourcesContent":["import express, { Request, Response, NextFunction, Router } from \"express\";\nimport router from \"./user.router\";\nimport quizController from \"../../controllers/quiz.controller\";\n\nconst quizRouter = Router({ mergeParams: true });\n\nquizRouter.get(\"/\", async (req: Request, res: Response, next: NextFunction) => req.params.lectureId\n    ? await quizController.findByLectureId(req, res, next)\n    : await quizController.findAll(req, res, next));\n\nquizRouter.get(\"/:id\", quizController.findById);\n\nquizRouter.post(\"/:id\", quizController.submitResponses);\n\nexport default quizRouter;"]}