{"version":3,"file":"quiz.controller.js","sourceRoot":"","sources":["../../controllers/quiz.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0DAA8B;AAG9B,MAAM,QAAQ,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACvE,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAE1B,MAAM,IAAI,GAAG,MAAM,gBAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAElD,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAA,CAAC;AAEF,MAAM,OAAO,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACtE,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAEjC,MAAM,IAAI,GAAG,MAAM,gBAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IAErC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAA,CAAC;AAEF,MAAM,eAAe,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9E,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAEjC,MAAM,IAAI,GAAG,MAAM,gBAAE,CAAC,IAAI,CAAC,OAAO,CAAC;QAC/B,KAAK,EAAE;YACH,SAAS;SACZ;KACJ,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAA,CAAC;AAEF,MAAM,eAAe,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC9E,MAAM,EACF,MAAM,EACN,SAAS,EACZ,GAAG,GAAG,CAAC,IAAI,CAAC;IAEb,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;QAC5B,MAAM,gBAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC;YACjC,cAAc,EAAE,QAAQ,CAAC,cAAc;YACvC,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;KACN;IAED,GAAG,CAAC,IAAI,CAAC;QACL,OAAO,EAAE,IAAI;KAChB,CAAC,CAAC;AACP,CAAC,CAAA,CAAC;AAEF,kBAAe;IACX,QAAQ;IACR,OAAO;IACP,eAAe;IACf,eAAe;CAClB,CAAC","sourcesContent":["import db from \"../db/models\";\nimport { Request, Response, NextFunction } from \"express\";\n\nconst findById = async (req: Request, res: Response, next: NextFunction) => {\n    const { id } = req.params;\n\n    const quiz = await db.Quiz.findByPk(parseInt(id));\n\n    return res.json(quiz);\n};\n\nconst findAll = async (req: Request, res: Response, next: NextFunction) => {\n    const { lectureId } = req.params;\n\n    const quiz = await db.Quiz.findAll();\n\n    return res.json(quiz);\n};\n\nconst findByLectureId = async (req: Request, res: Response, next: NextFunction) => {\n    const { lectureId } = req.params;\n\n    const quiz = await db.Quiz.findAll({\n        where: {\n            lectureId\n        }\n    });\n\n    return res.json(quiz);\n};\n\nconst submitResponses = async (req: Request, res: Response, next: NextFunction) => {\n    const {\n        userId,\n        responses\n    } = req.body;\n\n    for (let response of responses) {\n        await db.QuizQuestionResponse.create({\n            quizQuestionId: response.quizQuestionId,\n            value: response.value,\n            userId: userId\n        });\n    }\n\n    res.json({\n        success: true\n    });\n};\n\nexport default {\n    findById,\n    findAll,\n    findByLectureId,\n    submitResponses\n};"]}