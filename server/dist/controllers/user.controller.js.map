{"version":3,"file":"user.controller.js","sourceRoot":"","sources":["../../controllers/user.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import db from '../db/models';\nimport path from 'path';\nimport { Request, Response, NextFunction } from 'express';\nimport { writeFile } from 'fs';\nimport { hashPassword } from '../utils/security/passwords';\n\nconst findById = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const { id } = req.params;\n    const user = await db.User.findByPk(parseInt(id), {\n      include: [{\n        all: true,\n        nested: true\n      }]\n    });\n\n    console.log(user);\n    res.json(user);\n  } catch (error) {\n    next(error);\n  }\n};\n\nconst getSignedInUser = async (req: Request, res: Response, next: NextFunction) => {\n  const authUser = req.user;\n  console.log(authUser);\n};\n\nconst createUser = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const { user, classList } = req.body;\n\n    user.password = hashPassword(user.password);\n    const createResponse: any = await db.User.create(user);\n    classList.userId = createResponse.insertId;\n    const courseSubscriptionResponse: any = await db.ClassList.create(classList);\n\n    res.json(courseSubscriptionResponse);\n  } catch (error) {\n    next(error);\n  }\n};\n\nconst updateUser = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const { id } = req.params;\n    const user = req.body;\n\n    if (user.avatarUrl) {\n      user.avatarUrl = user.avatarUrl + path.extname(user.fileName);\n      delete user.fileName;\n    }\n\n    const updateUserResponse: any = await db.User.update(user, {\n      where: {\n        id: id\n      }\n    });\n\n    res.json(user);\n  } catch (error) {\n    next(error);\n  }\n};\n\nconst uploadAssets = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    if (!req.files) {\n      res.json({ msg: 'no go bro' });\n      return;\n    }\n\n    const newImage: any = req.files.image;\n    const id = req.body.id;\n    const imagePath = path.join(\n      __dirname,\n      `../public/assets/img/${id}${path.extname(newImage.name)}`\n    );\n\n    const buffer = Buffer.from(newImage.data, 'base64');\n\n    writeFile(imagePath, buffer, (err: Error) => {\n      if (err) {\n        next(err);\n      }\n      res.send({ msg: 'File Uploaded' });\n    });\n  } catch (err) {\n    next(err);\n  }\n};\n\nexport default {\n  findById,\n  createUser,\n  updateUser,\n  uploadAssets,\n  getSignedInUser\n};"]}